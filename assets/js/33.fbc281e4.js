(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{269:function(t,n,s){"use strict";s.r(n);var a=s(0),e=Object(a.a)({},(function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"存在重复元素-简单"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#存在重复元素-简单","aria-hidden":"true"}},[t._v("#")]),t._v(" 存在重复元素-简单")]),t._v(" "),s("p",[t._v("难度：简单"),s("br"),t._v(" "),s("br"),t._v("题目描述："),s("br"),t._v("给定一个整数数组，判断是否存在重复元素。"),s("br"),t._v("如果任意一值在数组中出现至少两次，函数返回 "),s("code",[t._v("true")]),t._v(" 。如果数组中每个元素都不相同，则返回 "),s("code",[t._v("false")]),t._v(" 。"),s("br"),t._v(" "),s("br"),t._v("示例：")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("输入"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n输出"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("br"),t._v(" "),s("br"),t._v("解题思路："),s("br"),t._v("哈希表\n```javascript\nvar containsDuplicate = function(nums) {\n    let map = new Map();\n    for(let n of nums){\n        if(map.has(n)){\n            return true\n        } else {\n            map.set(n, n)\n        }\n    }\n    return false\n};\n```\n")])}),[],!1,null,null,null);n.default=e.exports}}]);