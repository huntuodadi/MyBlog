(window.webpackJsonp=window.webpackJsonp||[]).push([[115],{366:function(s,n,r){"use strict";r.r(n);var a=r(0),e=Object(a.a)({},(function(){var s=this,n=s.$createElement,r=s._self._c||n;return r("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[r("h1",{attrs:{id:"关于数组扁平化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#关于数组扁平化","aria-hidden":"true"}},[s._v("#")]),s._v(" 关于数组扁平化")]),s._v(" "),r("p",[s._v("针对这样一个数组[3,[4,8,[9,1],3],[6,8],[2,10],5,7]想要将其展开，一般都会想到的是利用递归。\n"),s._v("\n如下这样一个方法：")]),s._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("    function getArr(arr) {\n        var newArr = [];\n        for (let i of arr){\n            if(Array.isArray(i)){\n                newArr.push(...getArr(i))\n            } else {\n                newArr.push(i)\n            }\n        }\n        return newArr\n    }\n")])]),s._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[s._v("1")]),r("br"),r("span",{staticClass:"line-number"},[s._v("2")]),r("br"),r("span",{staticClass:"line-number"},[s._v("3")]),r("br"),r("span",{staticClass:"line-number"},[s._v("4")]),r("br"),r("span",{staticClass:"line-number"},[s._v("5")]),r("br"),r("span",{staticClass:"line-number"},[s._v("6")]),r("br"),r("span",{staticClass:"line-number"},[s._v("7")]),r("br"),r("span",{staticClass:"line-number"},[s._v("8")]),r("br"),r("span",{staticClass:"line-number"},[s._v("9")]),r("br"),r("span",{staticClass:"line-number"},[s._v("10")]),r("br"),r("span",{staticClass:"line-number"},[s._v("11")]),r("br")])]),r("p",[s._v("但是这样的方法在数组嵌套非常深的情况下，很容易造成堆栈溢出，那么什么是堆栈溢出呢？")]),s._v(" "),r("blockquote",[r("p",[s._v("堆栈溢出就是栈是一种后进先出的数据结构，堆栈也是采用这种结构管理内存，调用过程中当最初的结果依赖于后面的计算处理，那么后面的部分虽然后开始处理，却先结束。当后续处理太多并且又依赖更后面的处理......（比如递归），便会一直压栈，当空间全部用完，就会造成“堆栈溢出”。\n更通俗一点就是向一个水桶里装水，等装满了之后再加水就溢出了")])]),s._v(" "),r("p",[s._v("这时候就应该换一种方法来解决这个问题")]),s._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("    function getArr(arr) {\n        let stack = [...arr].reverse()\n        let newArr = []\n        while(stack.length){\n        let o = stack.pop()\n        if(Array.isArray(o)){\n                stack.push(...o.reverse())\n           } else {\n                newArr.push(o)\n           }\n        }\n        return newArr\n    }\n")])]),s._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[s._v("1")]),r("br"),r("span",{staticClass:"line-number"},[s._v("2")]),r("br"),r("span",{staticClass:"line-number"},[s._v("3")]),r("br"),r("span",{staticClass:"line-number"},[s._v("4")]),r("br"),r("span",{staticClass:"line-number"},[s._v("5")]),r("br"),r("span",{staticClass:"line-number"},[s._v("6")]),r("br"),r("span",{staticClass:"line-number"},[s._v("7")]),r("br"),r("span",{staticClass:"line-number"},[s._v("8")]),r("br"),r("span",{staticClass:"line-number"},[s._v("9")]),r("br"),r("span",{staticClass:"line-number"},[s._v("10")]),r("br"),r("span",{staticClass:"line-number"},[s._v("11")]),r("br"),r("span",{staticClass:"line-number"},[s._v("12")]),r("br"),r("span",{staticClass:"line-number"},[s._v("13")]),r("br")])])])}),[],!1,null,null,null);n.default=e.exports}}]);