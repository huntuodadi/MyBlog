(window.webpackJsonp=window.webpackJsonp||[]).push([[146],{306:function(a,s,e){"use strict";e.r(s);var t=e(0),n=Object(t.a)({},(function(){var a=this,s=a.$createElement,e=a._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"dva入门"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dva入门","aria-hidden":"true"}},[a._v("#")]),a._v(" dva入门")]),a._v(" "),e("blockquote",[e("p",[a._v("写这篇文章主要是将自己学会的知识再表达出来，自己虽然理解了这块知识，但是是否能用自己的话再讲出来，\n那又是另外一种境地，只有能自己讲述后才算完成转化。")])]),a._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://juejin.im/post/5b920e4e6fb9a05d3827bc15",target:"_blank",rel:"noopener noreferrer"}},[a._v("传送门"),e("OutboundLink")],1)])]),a._v(" "),e("h2",{attrs:{id:"dva是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dva是什么","aria-hidden":"true"}},[a._v("#")]),a._v(" dva是什么")]),a._v(" "),e("p",[a._v("dva 是阿里体验技术部开发的 React 应用框架，命名是根据守望先锋中的任务D.va而来。 主要用于解决组件之间的通行问题，\n在以前react项目中解决数据流问题会引入redux，又由于redux没有异步操作，所以需要引入redux-saga或redux-thunk,这样的缺点就是\n引入多个库，致使项目结构复杂。而现在：")]),a._v(" "),e("blockquote",[e("p",[a._v("dva = React-Router + Redux + Redux-saga")])]),a._v(" "),e("p",[a._v("将上面三个 React 工具库包装在一起，简化了 API，让开发 React 应用更加方便和快捷。")]),a._v(" "),e("ul",[e("li",[a._v("了解dva之前可以先去了解redux-saga.")])]),a._v(" "),e("p",[a._v("dva的最简结构：")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("import dva from 'dva';\nconst App = () => <div>Hello dva</div>;\n\n// 创建应用\nconst app = dva();\napp.model(model)\n// 注册视图\napp.router(() => <App />);\n// 启动应用\napp.start('#root');\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br")])]),e("h2",{attrs:{id:"数据流图"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据流图","aria-hidden":"true"}},[a._v("#")]),a._v(" 数据流图")]),a._v(" "),e("p",[e("img",{attrs:{src:"/img/dva/1.png",alt:""}})]),a._v(" "),e("h2",{attrs:{id:"核心概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#核心概念","aria-hidden":"true"}},[a._v("#")]),a._v(" 核心概念")]),a._v(" "),e("ul",[e("li",[a._v("State：一个对象，保存整个应用状态")]),a._v(" "),e("li",[a._v("View：React 组件构成的视图层")]),a._v(" "),e("li",[a._v("Action：一个对象，描述事件")]),a._v(" "),e("li",[a._v("connect 方法：一个函数，绑定 State 到 View")]),a._v(" "),e("li",[a._v("dispatch 方法：一个函数，发送 Action 到 State")])]),a._v(" "),e("h3",{attrs:{id:"state和view"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#state和view","aria-hidden":"true"}},[a._v("#")]),a._v(" state和view")]),a._v(" "),e("p",[a._v("state是用于数据存储保存全局状态。view是react组件构成的UI层，当state变化时会触发ui层视图的变化。")]),a._v(" "),e("h3",{attrs:{id:"action和dispatch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#action和dispatch","aria-hidden":"true"}},[a._v("#")]),a._v(" Action和dispatch")]),a._v(" "),e("p",[a._v("action是用于描述一个事件的一个对象")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("{\n    type: 'submit-form-data',\n    payload: formData\n}\n\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br")])]),e("p",[a._v("dispatch则用来发送Action到State")]),a._v(" "),e("h3",{attrs:{id:"connect"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#connect","aria-hidden":"true"}},[a._v("#")]),a._v(" connect")]),a._v(" "),e("p",[a._v("connect 是一个函数，绑定 State 到 View，connect 方法返回的也是一个 React 组件，通常称为容器组件，是用于生成State到Prop的映射")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("// 第一种写法这里使用来修饰器@\n@connect((state) => {\n  return {\n    dept: state.dept,\n    version: state.version,\n  };\n})\n\n// 第二种写法\nconnect(({ state}) => ({state}))(App);\n\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br")])]),e("h2",{attrs:{id:"model"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#model","aria-hidden":"true"}},[a._v("#")]),a._v(" Model")]),a._v(" "),e("p",[a._v("dva中的model是所有的应用逻辑都定义在里面")]),a._v(" "),e("p",[a._v("model的栗子🌰：")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("export default {\n    namespace: 'modelName',\n    state: {\n      num: 0\n    }，\n    subscriptions: {\n      setup({dispatch,history}){\n        return history.listen(({pathname, query})=>{\n          dosomething....  \n        })\n      }\n    }\n    effects: {\n        *addAfter1Second({payload}, { call, put, select }) {\n          yield call(delay, 1000);\n          yield put({ type: 'add' , payload: 10});\n          const num =  yield select(state => state.modelNmae.num);\n          console.log(num)\n      },\n    },\n    reducers: {\n      add(state, action) { \n        return{\n          ...state,\n          num: action.payload\n        }\n      },\n  },\n}\n\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br"),e("span",{staticClass:"line-number"},[a._v("12")]),e("br"),e("span",{staticClass:"line-number"},[a._v("13")]),e("br"),e("span",{staticClass:"line-number"},[a._v("14")]),e("br"),e("span",{staticClass:"line-number"},[a._v("15")]),e("br"),e("span",{staticClass:"line-number"},[a._v("16")]),e("br"),e("span",{staticClass:"line-number"},[a._v("17")]),e("br"),e("span",{staticClass:"line-number"},[a._v("18")]),e("br"),e("span",{staticClass:"line-number"},[a._v("19")]),e("br"),e("span",{staticClass:"line-number"},[a._v("20")]),e("br"),e("span",{staticClass:"line-number"},[a._v("21")]),e("br"),e("span",{staticClass:"line-number"},[a._v("22")]),e("br"),e("span",{staticClass:"line-number"},[a._v("23")]),e("br"),e("span",{staticClass:"line-number"},[a._v("24")]),e("br"),e("span",{staticClass:"line-number"},[a._v("25")]),e("br"),e("span",{staticClass:"line-number"},[a._v("26")]),e("br"),e("span",{staticClass:"line-number"},[a._v("27")]),e("br"),e("span",{staticClass:"line-number"},[a._v("28")]),e("br"),e("span",{staticClass:"line-number"},[a._v("29")]),e("br"),e("span",{staticClass:"line-number"},[a._v("30")]),e("br")])]),e("p",[a._v("model对象的属性由namespace,state, effect,reducers,subscriptions组成。")]),a._v(" "),e("h3",{attrs:{id:"namespace和state"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#namespace和state","aria-hidden":"true"}},[a._v("#")]),a._v(" namespace和state")]),a._v(" "),e("p",[a._v("namespace当前 Model 的名称。整个应用的 State，由多个小的 Model 的 State 以 namespace 为 key 合成,当在ui层触发变化时，可以利用namespace来区分触发那个model的方法。从而改变state.")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("dispatch({\n  type: 'modelname/add',\n  payload: 10\n})\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br")])]),e("p",[a._v("数据保存在state，直接决定了视图层的输出.")]),a._v(" "),e("h3",{attrs:{id:"effects和reducers"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#effects和reducers","aria-hidden":"true"}},[a._v("#")]),a._v(" effects和reducers")]),a._v(" "),e("p",[a._v("effects和reducers都是action的处理器，不同的是reducers处理的是同步的action,effects处理的是异步的action,effects是基于 redux-saga实现，effect是一个Generator函数，内部使用yield关键字，标识每一步的操作。effect提供了供内部使用的三个方法。")]),a._v(" "),e("ul",[e("li",[a._v("call: 执行异步函数，一般用于请求数据")]),a._v(" "),e("li",[a._v("put: 相当与dispatch，发出一个action,触法一个同步的action")]),a._v(" "),e("li",[a._v("select: 可以用于获取全局的状态state")])]),a._v(" "),e("h3",{attrs:{id:"subscriptions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#subscriptions","aria-hidden":"true"}},[a._v("#")]),a._v(" subscriptions")]),a._v(" "),e("p",[a._v("subscriptions一般用于监听路由变化，当满足某些要求时，可以触发一些事件")])])}),[],!1,null,null,null);s.default=n.exports}}]);