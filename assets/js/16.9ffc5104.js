(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{249:function(n,s,t){"use strict";t.r(s);var r=t(0),e=Object(r.a)({},(function(){var n=this,s=n.$createElement,t=n._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"颠倒二进制位-简单"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#颠倒二进制位-简单","aria-hidden":"true"}},[n._v("#")]),n._v(" 颠倒二进制位-简单")]),n._v(" "),t("p",[n._v("难度：简单"),t("br"),n._v(" "),t("br"),n._v("题目描述："),t("br"),n._v("颠倒给定的 32 位无符号整数的二进制位。")]),n._v(" "),t("p",[n._v("示例：")]),n._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[n._v("输入"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("00000010100101000001111010011100")]),n._v("\n输出"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("00111001011110000010100101000000")]),n._v("\n解释"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v(" 输入的二进制串 "),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("00000010100101000001111010011100")]),n._v(" 表示无符号整数 "),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("43261596")]),n._v("，\n      因此返回 "),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("964176192")]),n._v("，其二进制表示形式为 "),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("00111001011110000010100101000000")]),n._v("。\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br")])]),t("br"),n._v(" "),t("br"),n._v("解题思路：\n```javascript\nvar reverseBits = function(n) {\n    let result = 0;\n    for(let i = 0;i < 32;i++){\n        result = (result << 1) + (n & 1);\n        n >>= 1;\n    }\n    return result >>> 0;\n};\n```\n```javascript\nvar reverseBits = function(n) {\n    let result = 0;\n    // result从右往移动空出末位 + n从左往右移动获取末位 + n次 = 倒序\n    for(let i = 0;i < 32;i++){\n        // 左移空出一位\n        result <<= 1\n        // n&1获取n的末位，result的末位换成n的末位\n        result |= n & 1;\n        // 右移1位\n        n >>= 1;\n    }\n    return result >>> 0;\n};\n```\n")])}),[],!1,null,null,null);s.default=e.exports}}]);